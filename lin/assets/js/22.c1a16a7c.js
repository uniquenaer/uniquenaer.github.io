(window.webpackJsonp=window.webpackJsonp||[]).push([[22],{239:function(t,n,s){"use strict";s.r(n);var e=s(0),a=Object(e.a)({},function(){var t=this,n=t.$createElement,s=t._self._c||n;return s("div",{staticClass:"content"},[t._m(0),t._v(" "),s("blockquote",[s("p",[t._v("Lin 的前端部分，是在 vue-cli3 生成的模板项目的基础上开发而来的 。\n当然对于本项目而言，你几乎可以不用关注 vue-cli3 的内容，如果你需要对 webpack 的配置进行更改，那么如果你对 vue-cli 的使用不熟悉，建议先阅读"),s("a",{attrs:{href:"https://cli.vuejs.org/zh/",target:"_blank",rel:"noopener noreferrer"}},[t._v("官方文档"),s("OutboundLink")],1),t._v("。\nLin 的开发遵循严格的目录结构和代码规范、我们希望你能对此达成共识，这非常有助于你后续的开发。")])]),t._v(" "),s("p",[t._v("Lin 的前端部分代码结构如下：")]),t._v(" "),t._m(1),t._m(2),t._v(" "),t._m(3),t._v(" "),t._m(4),t._v(" "),s("p",[t._v("菜单栏的 icon 图标我们推荐用阿里的"),s("a",{attrs:{href:"http://www.iconfont.cn/",target:"_blank",rel:"noopener noreferrer"}},[t._v("iconfont"),s("OutboundLink")],1),t._v("，但是这并不满足一些同学需要用设计师设计的指定图标，所以我们提供了相应的机制，可以在对应菜单的 "),s("code",[t._v("route配置")]),t._v(" 中，添加一个 "),s("code",[t._v("meta属性")]),t._v(" ，如果同时存在 icon 属性，优先使用 src 属性。把 icons 文件夹放到 public 下，是因为任何放置在 "),s("code",[t._v("public")]),t._v(" 文件夹的静态资源都会被简单的复制，而不经过 "),s("code",[t._v("webpack")]),t._v("。你需要通过绝对路径来引用它们。")]),t._v(" "),t._m(5),t._m(6),t._v(" "),t._m(7),t._v(" "),s("p",[t._v("还有一种是平常做 vue 项目积累的基础组件库，这个也希望大家养成基础组件库封装的习惯。")]),t._v(" "),s("p",[t._v("这两种组件我们都遵循同样的规范，尽量不与业务耦合，只封装基础组件。")]),t._v(" "),t._m(8),t._v(" "),s("p",[t._v("这样拆分的考虑有两个，其一是将单一业务模型抽离成一个单独文件维护，这样后期拓展修改比较清晰；其二是为 Lin 后面要做的插件模式考虑，插件模式是 Lin 的一大特色，将会单独一小节来解释。")]),t._v(" "),t._m(9),t._v(" "),t._m(10),t._v(" "),t._m(11),t._v(" "),s("p",[t._v("希望通过阅读本小节，使你对 Lin 的前端部分有了初步的了解。通过目录结构不难看出，项目使用了大量的组件封装，这其实也是一种设计思想，让每个模块只做好一件事。")]),t._v(" "),t._m(12),t._v(" "),s("RightMenu")],1)},[function(){var t=this.$createElement,n=this._self._c||t;return n("h2",{attrs:{id:"目录结构"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#目录结构","aria-hidden":"true"}},[this._v("#")]),this._v(" 目录结构")])},function(){var t=this.$createElement,n=this._self._c||t;return n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[this._v("├───public // 公共资源目录，该目录webpack原封打包\n│    ├───icons // icon图片存放目录\n│    │   favicon.ico // 本站favicon图片\n│    │   iconfont.css // 阿里iconfont文件\n│    │   index.html // template模板\n│    │   robots.txt // Robots协议\n├───src\n│    ├───assets // 静态资源文件存放目录\n│    ├───base // 通用基础组件库（包含element-ui二次封装组件）\n│    ├───components // 布局组件及业务基础组件\n│    │   ├───layout // layout布局组件\n│    ├───config // config配置项\n│    │   │   error-code.js // 与服务端约定的错误状态码\n│    │   │   index.js // 前端自定义配置项\n│    ├───lin // Lin CMS核心库\n│    │   ├───directives // 全局指令\n│    │   ├───filter // 全局过滤器\n│    │   ├───mixin // 全局mixin\n│    │   ├───models // model层\n│    │   ├───utils // 各种工具函数\n│    ├───router // 前端路由\n│    │   ├───modules // 每个业务模型的路由树\n│    │   │   async-router.js // 菜单路由\n│    │   │   index.js // vue-router入口文件\n│    │   │   routes.js // vue-router路由配置\n│    ├───store // vuex状态管理文件\n│    ├───views // 业务组件\n│    │   App.vue // vue根组件\n│    │   main.js // webpack打包入口\n│   babel.config.js // babel配置文件\n│   .browserslistrc // 适配浏览器版本\n│   .eslintrc.js // eslint配置文件\n│   .gitignore // git上传忽略文件\n│   .browserslistrc // 适配浏览器版本\n\n")])])])},function(){var t=this.$createElement,n=this._self._c||t;return n("h2",{attrs:{id:"解释说明"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#解释说明","aria-hidden":"true"}},[this._v("#")]),this._v(" 解释说明")])},function(){var t=this.$createElement,n=this._self._c||t;return n("p",[n("strong",[this._v("在上面我们针对每个目录都做了相应的注释，不过下面还有几个问题需要额外说明一下")])])},function(){var t=this.$createElement,n=this._self._c||t;return n("ul",[n("li",[this._v("public/icons 文件夹")])])},function(){var t=this,n=t.$createElement,s=t._self._c||n;return s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("  meta"),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    title"),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{attrs:{class:"token string"}},[t._v("'添加商品'")]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    icon"),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{attrs:{class:"token string"}},[t._v("'iconfont icon-rizhiguanli'")]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    src"),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{attrs:{class:"token string"}},[t._v("'icons/your-icon.png'")]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    auths"),s("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{attrs:{class:"token string"}},[t._v("'查询所有日志'")]),s("span",{attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n")])])])},function(){var t=this.$createElement,n=this._self._c||t;return n("ul",[n("li",[this._v("src/base 文件夹")])])},function(){var t=this.$createElement,n=this._self._c||t;return n("p",[this._v("这个文件夹主要放置两种组件，一种是我们二次封装 "),n("code",[this._v("element-ui")]),this._v(" 的组件库，使其更符合 Lin 的风格，如果你想要引入其他第三方组件库，比如 "),n("code",[this._v("antd")]),this._v("，也同样建议在此文件夹进行二次封装。")])},function(){var t=this.$createElement,n=this._self._c||t;return n("ul",[n("li",[this._v("src/router/modules 文件夹")])])},function(){var t=this.$createElement,n=this._self._c||t;return n("ul",[n("li",[this._v("src/views 文件夹")])])},function(){var t=this.$createElement,n=this._self._c||t;return n("p",[this._v("业务逻辑全部放在这个文件夹，尽量按照路由的层级关系进行维护。这里面要注意下想要渲染子路由，需要在父组件中添加 "),n("code",[this._v("<router-view />")]),this._v("，它一个 "),n("code",[this._v("functional")]),this._v(" 组件，渲染路径匹配到的视图组件。")])},function(){var t=this.$createElement,n=this._self._c||t;return n("h2",{attrs:{id:"小结"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#小结","aria-hidden":"true"}},[this._v("#")]),this._v(" 小结")])},function(){var t=this.$createElement,n=this._self._c||t;return n("p",[this._v("另外如果有疑问，请在 "),n("code",[this._v("issue")]),this._v(" 中提出，我们会及时回复并处理。")])}],!1,null,null,null);n.default=a.exports}}]);