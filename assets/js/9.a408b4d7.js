(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{265:function(e,r,t){"use strict";t.r(r);var s=t(0),a=Object(s.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var e=this,r=e.$createElement,t=e._self._c||r;return t("div",{staticClass:"content"},[t("h2",{attrs:{id:"promise是什么？"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#promise是什么？","aria-hidden":"true"}},[e._v("#")]),e._v(" Promise是什么？")]),e._v(" "),t("blockquote",[t("p",[e._v("Promise是用来解决程序异步的问题的，在使用promise之前一般是使用回调函数来解决处理异步问题的。")])]),e._v(" "),t("h2",{attrs:{id:"那使用回调函数解决异步会带来哪些问题呢？"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#那使用回调函数解决异步会带来哪些问题呢？","aria-hidden":"true"}},[e._v("#")]),e._v(" 那使用回调函数解决异步会带来哪些问题呢？")]),e._v(" "),t("p",[e._v("1 代码风格上容易陷入回调地狱，不好管理")]),e._v(" "),t("p",[e._v("2 缺乏顺序性和管理性（待补充为什么）")]),e._v(" "),t("p",[e._v("3 Promise是一个容器，储存着未来才会结束的某个事件的结果，从语法上来讲是一个对象。")]),e._v(" "),t("h2",{attrs:{id:"promise有下面几个特点"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#promise有下面几个特点","aria-hidden":"true"}},[e._v("#")]),e._v(" Promise有下面几个特点")]),e._v(" "),t("p",[e._v("1 状态改变是不可逆的")]),e._v(" "),t("p",[e._v("2 状态不受外界影响（pending--\x3efulfilled,pending-rejected）")]),e._v(" "),t("h2",{attrs:{id:"promise的缺点有哪些呢？"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#promise的缺点有哪些呢？","aria-hidden":"true"}},[e._v("#")]),e._v(" Promise的缺点有哪些呢？")]),e._v(" "),t("p",[e._v("1 pending时无法获取状态")]),e._v(" "),t("p",[e._v("2 错误时如果外界不传回调函数，无法获取错误消息")]),e._v(" "),t("p",[e._v("3 一旦新建，无法取消Promise")])])}],!1,null,null,null);r.default=a.exports}}]);