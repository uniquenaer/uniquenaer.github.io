(window.webpackJsonp=window.webpackJsonp||[]).push([[27],{206:function(t,s,a){t.exports=a.p+"assets/img/auth.12591190.jpg"},237:function(t,s,a){"use strict";a.r(s);var n=a(0),o=Object(n.a)({},function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("div",{staticClass:"content"},[t._m(0),t._v(" "),n("p",[t._v("一个 CMS 系统，权限管理是比较基础的也是很重要的一块。在前端做权限管理，一般有两种做法：")]),t._v(" "),t._m(1),t._v(" "),t._m(2),t._v(" "),n("p",[t._v("视图控制的目标是根据当前用户权限决定用户能访问哪些页面、操作哪些 Dom，典型场景是动态渲染菜单及控制各种操作按钮的显示隐藏。")]),t._v(" "),t._m(3),t._v(" "),n("p",[t._v("在渲染菜单的时候，有两种不同的情况：")]),t._v(" "),t._m(4),t._v(" "),t._m(5),t._v(" "),t._m(6),t._v(" "),t._m(7),t._v(" "),n("p",[t._v("比如：")]),t._v(" "),t._m(8),t._m(9),t._v(" "),t._m(10),t._v(" "),t._m(11),t._m(12),t._v(" "),n("p",[t._v("如果用户试图通过 URL 强制访问，Lin 框架也在全局路由里做了拦截：")]),t._v(" "),t._m(13),n("p",[t._v("确保了用户在正常的操作过程中，无法访问与其权限不符合的页面。")]),t._v(" "),t._m(14),t._v(" "),t._m(15),t._v(" "),n("p",[t._v("我们以能否搜索日志为例")]),t._v(" "),t._m(16),n("p",[t._v("如果一个 dom 对应多个 api，比如当前登录的管理员想要修改自己的用户信息，但是没有修改密码的权限，那么编辑按钮显示。如果一个 dom 对应一个 api，那么直接传入字符串即可。")]),t._v(" "),n("img-wrapper",[n("img",{attrs:{src:a(206)}})]),t._v(" "),t._m(17),t._v(" "),t._m(18),t._v(" "),t._m(19),n("p",[t._v("更多关于 token 添加、验证、刷新实现原理参考"),n("router-link",{attrs:{to:"./../client/exception.html"}},[t._v("异常机制")])],1),t._v(" "),t._m(20),t._v(" "),n("p",[t._v("在 Lin 框架里，我们实现了对每个页面、每一个 Dom 节点进行权限管理，在数据请求接口添加了 token 验证，通过验证后才能从后台拿回数据。开发者只需要经过简单的配置，就能拥有一个带权限管理的 CMS 系统。")]),t._v(" "),n("RightMenu")],1)},[function(){var t=this.$createElement,s=this._self._c||t;return s("h1",{attrs:{id:"路由配置与权限管理"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#路由配置与权限管理","aria-hidden":"true"}},[this._v("#")]),this._v(" 路由配置与权限管理")])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[this._v("视图层的访问权限")]),this._v(" "),s("li",[this._v("API 的操作权限")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"视图控制"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#视图控制","aria-hidden":"true"}},[this._v("#")]),this._v(" 视图控制")])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"菜单渲染"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#菜单渲染","aria-hidden":"true"}},[this._v("#")]),this._v(" 菜单渲染")])},function(){var t=this.$createElement,s=this._self._c||t;return s("ul",[s("li",[this._v("渲染所有菜单，当用户访问不在自己权限范围内的页面时提示权限不足。")]),this._v(" "),s("li",[this._v("只显示当前用户能访问的菜单，如果用户通过 URL 强制访问，提示用户无此权限并退回到当前页面。")])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("为了提高用户体验，Lin 框架使用第二种方式来渲染菜单，并且在框架里，路由数据是可以直接用来渲染生成左侧菜单，简化了开发流程。 "),s("code",[this._v("src/router/routes")]),this._v(" 为路由配置入口，除了需要通过新窗口打开的页面如登陆页，要在当前文件下配置，其余所有子页面都挂载在"),s("code",[this._v("Home")]),this._v("组件下，需要在 "),s("code",[this._v("authRouter")]),this._v(" 里配置。")])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"tip custom-block"},[s("p",{staticClass:"custom-block-title"},[this._v("TIP")]),this._v(" "),s("p",[this._v("左侧菜单最多只能渲染到二级路由，三级路由将在右侧内容区以 tab 的形式渲染。")])])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("p",[t._v("在 "),a("code",[t._v("authRouter")]),t._v("里，路由 "),a("code",[t._v("meta")]),t._v(" 配置项里的 "),a("code",[t._v("auths")]),t._v(" 属性，为该路由的权限配置，该属性的值类型为数组，也就是说一个页面可以配置多个权限，而登录用户至少需要拥有其中的一种权限，左侧菜单才会把该路由的路口渲染出来；如果不配置 "),a("code",[t._v("auths")]),t._v(" 属性或者 "),a("code",[t._v("auths")]),t._v(" 的值为空数组，表示该页面是公共页面，所有用户都可以访问。")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{attrs:{class:"token keyword"}},[t._v("const")]),t._v(" authRouter "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n  "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    path"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("'/about'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    name"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("'about'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    component"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" About"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    meta"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      title"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("'林间有风'")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v("// 浏览器tab标题 默认为空")]),t._v("\n      icon"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("'iconfont el-icon-setting'")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v("// 路由标题左侧icon 默认为空")]),t._v("\n      src"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("'/assets/img/icon.png'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v("// 路由标题左侧图标（和icon只需要配置其中一种即可）默认为空")]),t._v("\n      menuTab"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token boolean"}},[t._v("true")]),t._v(" "),a("span",{attrs:{class:"token comment"}},[t._v("// 控制二级路由在右侧内容区以tab的形式渲染，默认false，二级路由在左侧菜单渲染")]),t._v("\n    "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    path"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("'/log'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    name"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("'log'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    component"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Log"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    meta"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      title"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("'日志管理'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      icon"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("'iconfont icon-rizhiguanli'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      auths"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{attrs:{class:"token string"}},[t._v("'查询所有日志'")]),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n    "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n\n  "),a("span",{attrs:{class:"token operator"}},[t._v("...")]),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("   "),a("span",{attrs:{class:"token comment"}},[t._v("// 省略其他路由")]),t._v("\n\n  adminRouter"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("  "),a("span",{attrs:{class:"token comment"}},[t._v("// 模块化导入路由数据")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("div",{staticClass:"tip custom-block"},[s("p",{staticClass:"custom-block-title"},[this._v("TIP")]),this._v(" "),s("p",[this._v("当 tab 不配置或者配置为 false 时，二级路由在左侧菜单渲染，此时二级路由配置的 icon 和 src 不会生效，默认以空心圆或者实心圆展示；但是在 reuseTab 组件(历史浏览记录)会被渲染出来。")])])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("p",[t._v("所有用户都可以访问 "),a("code",[t._v("about")]),t._v(" 页面，而 "),a("code",[t._v("log")]),t._v(" 页面需要用户拥有"),a("code",[t._v("查询所有日志")]),t._v(" 的权限才能访问。\n实现该功能的思路是："),a("code",[t._v("authRouter")]),t._v(" 保存了一份整个项目的完整路由数据，我们需要根据用户权限，对该数据进行遍历筛选，通过"),a("code",[t._v("hasPermission()")]),t._v(" 来判断用户是否拥有当前路由的访问权限，把符合条件的路由按顺序拼接成一个新的数组并传给 "),a("code",[t._v("sideBar")]),t._v(" 组件进行渲染。")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("  "),a("span",{attrs:{class:"token comment"}},[t._v("// 判断是否有访问该路由的权限")]),t._v("\n    "),a("span",{attrs:{class:"token function"}},[t._v("hasPermission")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("router"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("router"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("meta "),a("span",{attrs:{class:"token operator"}},[t._v("&&")]),t._v(" router"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("meta"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("auths"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("this")]),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("auths"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("some")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("auth "),a("span",{attrs:{class:"token operator"}},[t._v("=>")]),t._v(" router"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("meta"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("auths"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("indexOf")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("auth"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v(">=")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("0")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n      "),a("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n    "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("在筛选数据的过程中，要注意可能会出现用户没有访问当前路由的权限但是有访问该路由子路由的权限，这时候要把当前路由和其子路由都渲染出来，所以在遍历的时候要特别注意当前路由有没有 "),s("code",[this._v("children")]),this._v("，具体的遍历过程可以参考 "),s("code",[this._v("sideBar")]),this._v(" 组件里的 "),s("code",[this._v("filterSideBarList()")]),this._v("函数。")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("router"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("beforeEach")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("to"),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("from")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" next"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{attrs:{class:"token comment"}},[t._v("/* 路由发生变化重新计时 */")]),t._v("\n  store"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("commit")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v("'SET_STOP_TIME'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{attrs:{class:"token class-name"}},[t._v("Date")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("getTime")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{attrs:{class:"token comment"}},[t._v("/* 路由发生变化修改页面title */")]),t._v("\n  "),a("span",{attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("to"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("meta"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("title"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    document"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("title "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" to"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("meta"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("title\n  "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{attrs:{class:"token comment"}},[t._v("// 判断哪些页面不需登陆便可进入")]),t._v("\n  "),a("span",{attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token function"}},[t._v("isLoginRequired")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("to"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("name"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("!")]),t._v("store"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("state"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("logined"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{attrs:{class:"token function"}},[t._v("next")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" path"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("'/login'")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{attrs:{class:"token comment"}},[t._v("// // 判断权限")]),t._v("\n    "),a("span",{attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("store "),a("span",{attrs:{class:"token operator"}},[t._v("&&")]),t._v(" store"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("state "),a("span",{attrs:{class:"token operator"}},[t._v("&&")]),t._v(" store"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("state"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("user"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" isSuper "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" store"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("state"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("user\n      "),a("span",{attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("to"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("path "),a("span",{attrs:{class:"token operator"}},[t._v("!==")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("'/about'")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("!")]),t._v("isSuper "),a("span",{attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),a("span",{attrs:{class:"token operator"}},[t._v("!")]),a("span",{attrs:{class:"token function"}},[t._v("hasPermission")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("to"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        Vue"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("$notify")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n          title"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("'无权限'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n          dangerouslyUseHTMLString"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token boolean"}},[t._v("true")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n          message"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("'<strong class=\"my-notify\">您无此页面的权限哟</strong>'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),a("span",{attrs:{class:"token function"}},[t._v("next")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" path"),a("span",{attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("'/about'")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{attrs:{class:"token function"}},[t._v("next")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h3",{attrs:{id:"dom-元素渲染"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#dom-元素渲染","aria-hidden":"true"}},[this._v("#")]),this._v(" Dom 元素渲染")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("除了控制页面层级的访问，Lin 框架还提供了 "),s("code",[this._v("v-auth")]),this._v(" 指令，在可以发出请求的 dom 上添加该指令，根据用户权限，控制该 dom 的隐藏与显示。")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{attrs:{class:"token operator"}},[t._v("<")]),t._v("button v"),a("span",{attrs:{class:"token operator"}},[t._v("-")]),t._v("auth"),a("span",{attrs:{class:"token operator"}},[t._v("=")]),a("span",{attrs:{class:"token string"}},[t._v("\"['修改信息','修改密码']\"")]),a("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v("编辑"),a("span",{attrs:{class:"token operator"}},[t._v("<")]),a("span",{attrs:{class:"token operator"}},[t._v("/")]),t._v("button"),a("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v("\n\n"),a("span",{attrs:{class:"token comment"}},[t._v("// 或者")]),t._v("\n\n"),a("span",{attrs:{class:"token operator"}},[t._v("<")]),t._v("div "),a("span",{attrs:{class:"token keyword"}},[t._v("class")]),a("span",{attrs:{class:"token operator"}},[t._v("=")]),a("span",{attrs:{class:"token string"}},[t._v('"header-right"')]),t._v(" v"),a("span",{attrs:{class:"token operator"}},[t._v("-")]),t._v("auth"),a("span",{attrs:{class:"token operator"}},[t._v("=")]),a("span",{attrs:{class:"token string"}},[t._v("\"'搜索日志'\"")]),a("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v("\n  "),a("span",{attrs:{class:"token comment"}},[t._v("// 具体展示代码省略")]),t._v("\n"),a("span",{attrs:{class:"token operator"}},[t._v("<")]),a("span",{attrs:{class:"token operator"}},[t._v("/")]),t._v("div"),a("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"api-控制"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#api-控制","aria-hidden":"true"}},[this._v("#")]),this._v(" API 控制")])},function(){var t=this.$createElement,s=this._self._c||t;return s("p",[this._v("视图层的权限控制实质上就是控制显示，过滤掉无法使用的页面及 Dom 节点，让用户体验变得更加友好。但这并不安全，比如用户可以用测试工具模拟 api 发出请求，同样可以拿到想要的数据，所以真正能实现安全的是接口，没有通过后端验证的 api 请求是无法到数据的。 在 Lin 框架里，当用户登录成功后，后端会返回 token，该 token 会自动添加到 axios 的请求头 "),s("code",[this._v("Authorization")]),this._v("，这样用户发出的每一个 api 请求才能通过后端验证拿到数据。")])},function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{attrs:{class:"token comment"}},[t._v("// 添加一个请求拦截器")]),t._v("\nhttp"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("interceptors"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("request"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("use")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n  requestConfig "),a("span",{attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("requestConfig"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("url "),a("span",{attrs:{class:"token operator"}},[t._v("!==")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v("'/user/refresh'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{attrs:{class:"token comment"}},[t._v("// 有access_token")]),t._v("\n      "),a("span",{attrs:{class:"token keyword"}},[t._v("const")]),t._v(" accessToken "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("getToken")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v("'access_token'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      "),a("span",{attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("accessToken"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        requestConfig"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("headers"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Authorization "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" accessToken\n        "),a("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" requestConfig\n      "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{attrs:{class:"token keyword"}},[t._v("else")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{attrs:{class:"token keyword"}},[t._v("const")]),t._v(" refreshToken "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{attrs:{class:"token function"}},[t._v("getToken")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{attrs:{class:"token string"}},[t._v("'refresh_token'")]),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n      "),a("span",{attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("refreshToken"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        requestConfig"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("headers"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Authorization "),a("span",{attrs:{class:"token operator"}},[t._v("=")]),t._v(" refreshToken\n        "),a("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" requestConfig\n      "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{attrs:{class:"token keyword"}},[t._v("return")]),t._v(" requestConfig\n  "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  error "),a("span",{attrs:{class:"token operator"}},[t._v("=>")]),t._v(" Promise"),a("span",{attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{attrs:{class:"token function"}},[t._v("reject")]),a("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("error"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])},function(){var t=this.$createElement,s=this._self._c||t;return s("h2",{attrs:{id:"小节"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#小节","aria-hidden":"true"}},[this._v("#")]),this._v(" 小节")])}],!1,null,null,null);s.default=o.exports}}]);